{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUVO\\\\Documents\\\\Hostel-management-frontend\\\\Hostel_Management\\\\src\\\\components\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react'; // Import React and hooks for state and lifecycle\nimport { getAllAdmins } from '../services/adminService'; // Import function to fetch admin data from API\nimport '../css/sidebar.css'; // Import sidebar styles\nimport '../css/student.css'; // Import student table styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const [admins, setAdmins] = useState([]); // State to hold fetched admin data\n  const [error, setError] = useState(''); // State to hold error messages\n\n  useEffect(() => {\n    // useEffect runs after component mounts\n    getAllAdmins() // Call API to fetch admin data\n    .then(response => {\n      setAdmins(response.data); // Save fetched data to state\n    }).catch(err => {\n      setError('Failed to fetch admins'); // Set error message if API fails\n      console.error(err); // Log error to console for debugging\n    });\n  }, []); // Empty dependency array => runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [\"                                         \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), \"                                         \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), \"          \", /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"student-table\",\n      children: [\"                           \", /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [\"                                                    \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), \"                                         \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), \"                                        \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), \"                                     \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Permission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), \"                                   \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), \"                                      \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: admins.map(admin =>\n        /*#__PURE__*/\n        // Map through each admin and create a row\n        _jsxDEV(\"tr\", {\n          children: [\"                                   // Each row needs a unique key\", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), \"                               \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), \"                              \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), \"                           \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.permission\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), \"                         \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), \"                             \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), \"                           \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, admin.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"uNnMr+ko+dIkGEwuqjoTvrDz4F8=\");\n_c = Admin;\nexport default Admin; // Export the component for use elsewhere\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useEffect","useState","getAllAdmins","jsxDEV","_jsxDEV","Admin","_s","admins","setAdmins","error","setError","then","response","data","catch","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","admin","name","email","password","permission","id","_c","$RefreshReg$"],"sources":["C:/Users/SUVO/Documents/Hostel-management-frontend/Hostel_Management/src/components/Admin.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';               // Import React and hooks for state and lifecycle\r\nimport { getAllAdmins } from '../services/adminService';          // Import function to fetch admin data from API\r\nimport '../css/sidebar.css';                                      // Import sidebar styles\r\nimport '../css/student.css';                                      // Import student table styles\r\n\r\nconst Admin = () => {\r\n  const [admins, setAdmins] = useState([]);                       // State to hold fetched admin data\r\n  const [error, setError] = useState('');                         // State to hold error messages\r\n\r\n  useEffect(() => {                                               // useEffect runs after component mounts\r\n    getAllAdmins()                                                // Call API to fetch admin data\r\n      .then(response => {\r\n        setAdmins(response.data);                                 // Save fetched data to state\r\n      })\r\n      .catch(err => {\r\n        setError('Failed to fetch admins');                       // Set error message if API fails\r\n        console.error(err);                                       // Log error to console for debugging\r\n      });\r\n  }, []);                                                         // Empty dependency array => runs once on mount\r\n\r\n  return (\r\n    <div className=\"box\">                                         {/* Container with class box for layout */}\r\n      <h1>Admin Data</h1>                                         {/* Page title */}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}          {/* Display error message in red if exists */}\r\n      <table className=\"student-table\">                           {/* Styled table for displaying admin data */}\r\n        <thead>\r\n          <tr>                                                    {/* Table header row */}\r\n            <th>Name</th>                                         {/* Header: Admin name */}\r\n            <th>Email</th>                                        {/* Header: Admin email */}\r\n            <th>Password</th>                                     {/* Header: Admin password */}\r\n            <th>Permission</th>                                   {/* Header: Admin permission type */}\r\n            <th>Actions</th>                                      {/* Header: Action buttons */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {admins.map(admin => (                                  // Map through each admin and create a row\r\n            <tr key={admin.id}>                                   // Each row needs a unique key\r\n              <td>{admin.name}</td>                               {/* Display admin's name */}\r\n              <td>{admin.email}</td>                              {/* Display admin's email */}\r\n              <td>{admin.password}</td>                           {/* Display admin's password */}\r\n              <td>{admin.permission}</td>                         {/* Display admin's permission */}\r\n              <td>\r\n                <button>Edit</button>                             {/* Placeholder Edit button */}\r\n                <button>Delete</button>                           {/* Placeholder Delete button */}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;                                             // Export the component for use elsewhere\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}